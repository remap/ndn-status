Ok so not sure what to mention about it... It's fairly straight
forward.

To run the code in background you can type:
nohup java -jar ndn-status.jar /ucla.edu/host/borges.metwi </dev/null 2>&1 >/dev/null &

So to start it you run it as:
java -jar ndn-status.jar <uri>

For example:
java -jar ndn-status.jar /ucla.edu/host/borges.metwi

The URI is root that everything is located in, so:

/ucla.edu/host/borges.metwi/pathchar - works like a ping. What it does
            is to generate an empty packet with the same name that was
            given in the interest. I set the freshness to 5 seconds.
            So that's how long the packet will be valid and pinging it
            more often won't do any good (caches will respond instead)

<root>/status/xml - outputs xml version of status page
<root>/status/html - like above, but html <root>/status - text (it is
                     generated from xml version)

The html and xml basically just make connection on localhost and
forward the content verbatim. The text version is generated by
parsing xml one.

The code depends on two libraries being present:

ccn.jar - obviously
bcprov-jdk16-143.jar - Bouncy Castle, it's a cryptographic library,
                       and the reason I use it, is because ccnx
                       depends on it as well.
